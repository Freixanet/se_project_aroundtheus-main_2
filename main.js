!function(){"use strict";var n={259:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r),s=t(667),A=t.n(s),d=new URL(t(723),t.b),p=new URL(t(702),t.b),c=new URL(t(112),t.b),l=a()(o()),u=A()(d),C=A()(p),m=A()(c);l.push([n.id,".card{border-radius:10px;height:361px;overflow:hidden;position:relative;width:282px}.card__description{align-items:center;background-color:#fff;display:flex;flex-direction:row;justify-content:space-between;padding:25px 20px}.card__image{display:block;height:280px;-o-object-fit:cover;object-fit:cover;width:100%}.card__image:hover{cursor:pointer}.card__delete-button{background:transparent url("+u+") 50% no-repeat;border:none;height:20px;padding:0;position:absolute;right:15px;top:18px;width:18px;z-index:1}.card__delete-button:hover{cursor:pointer;opacity:.6}.card__title{color:#000;font-size:24px;font-weight:900;line-height:29px;margin:0;overflow:hidden;padding:0;text-overflow:ellipsis;white-space:nowrap}.card__like-button{background:transparent url("+C+") 50% no-repeat;border:none;flex:0 0 21px;height:19px;padding:0;width:21px}.card__like-button:hover{cursor:pointer;opacity:.5}.card__like-button_active{background:transparent url("+m+") 50% no-repeat;border:none;flex:0 0 25px;height:19px;padding:0;width:21px}.card__add-button_inactive{opacity:.2}","",{version:3,sources:["webpack://./src/blocks/card.css"],names:[],mappings:"AAAA,MACE,kBAAmB,CAInB,YAAa,CAHb,eAAgB,CAChB,iBAAkB,CAClB,WAEF,CAEA,mBAGE,kBAAmB,CAGnB,qBAAyB,CALzB,YAAa,CACb,kBAAmB,CAEnB,6BAA8B,CAC9B,iBAEF,CAEA,aAIE,aAAc,CADd,YAAa,CAFb,mBAAiB,CAAjB,gBAAiB,CACjB,UAGF,CAEA,mBACE,cACF,CAEA,qBACE,4EAAsE,CACtE,WAAY,CAGZ,WAAY,CAFZ,SAAU,CAIV,iBAAkB,CAElB,UAAW,CADX,QAAS,CAJT,UAAW,CAEX,SAIF,CAEA,2BACE,cAAe,CACf,UACF,CAEA,aACE,UAAc,CAEd,cAAe,CADf,eAAgB,CAOhB,gBAAiB,CAFjB,QAAS,CAFT,eAAgB,CAGhB,SAAU,CAJV,sBAAuB,CAEvB,kBAIF,CAEA,mBACE,4EACW,CACX,WAAY,CAIZ,aAAc,CAFd,WAAY,CACZ,SAAU,CAFV,UAIF,CAEA,yBACE,cAAe,CACf,UACF,CAEA,0BACE,4EAA8E,CAC9E,WAAY,CAIZ,aAAc,CAFd,WAAY,CACZ,SAAU,CAFV,UAIF,CAEA,2BACE,UACF",sourcesContent:[".card {\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  width: 282px;\n  height: 361px;\n}\n\n.card__description {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 25px 20px;\n  background-color: #ffffff;\n}\n\n.card__image {\n  object-fit: cover;\n  width: 100%;\n  height: 280px;\n  display: block;\n}\n\n.card__image:hover {\n  cursor: pointer;\n}\n\n.card__delete-button {\n  background: transparent url(../images/trash-icon.svg) center no-repeat;\n  border: none;\n  padding: 0;\n  width: 18px;\n  height: 20px;\n  z-index: 1;\n  position: absolute;\n  top: 18px;\n  right: 15px;\n}\n\n.card__delete-button:hover {\n  cursor: pointer;\n  opacity: 0.6;\n}\n\n.card__title {\n  color: #000000;\n  font-weight: 900;\n  font-size: 24px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin: 0;\n  padding: 0;\n  line-height: 29px;\n}\n\n.card__like-button {\n  background: transparent url(../images/like-button-inactive.svg) center\n    no-repeat;\n  border: none;\n  width: 21px;\n  height: 19px;\n  padding: 0;\n  flex: 0 0 21px;\n}\n\n.card__like-button:hover {\n  cursor: pointer;\n  opacity: 0.5;\n}\n\n.card__like-button_active {\n  background: transparent url(../images/like-button-active.svg) center no-repeat;\n  border: none;\n  width: 21px;\n  height: 19px;\n  padding: 0;\n  flex: 0 0 25px;\n}\n\n.card__add-button_inactive {\n  opacity: 0.2;\n}\n"],sourceRoot:""}]),e.Z=l},437:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,".cards__list{grid-gap:20px 17px;display:grid;grid-template-columns:repeat(auto-fit,282px);justify-content:center;list-style-type:none;margin:0 auto;padding:0;width:880px}@media screen and (max-width:918px){.cards__list{max-width:95.7%}}","",{version:3,sources:["webpack://./src/blocks/cards.css"],names:[],mappings:"AAAA,aAIE,kBAAmB,CAHnB,YAAa,CACb,4CAA8C,CAC9C,sBAAuB,CAEvB,oBAAqB,CACrB,aAAqB,CACrB,SAAU,CACV,WACF,CAEA,oCACE,aACE,eACF,CACF",sourcesContent:[".cards__list {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 282px);\n  justify-content: center;\n  grid-gap: 20px 17px;\n  list-style-type: none;\n  margin: 0 auto 0 auto;\n  padding: 0;\n  width: 880px;\n}\n\n@media screen and (max-width: 918px) {\n  .cards__list {\n    max-width: calc(100% - 4.3%);\n  }\n}\n"],sourceRoot:""}]),e.Z=a},799:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,"@media screen and (max-width:488px){#close-image{right:-42px;top:-28px}}","",{version:3,sources:["webpack://./src/blocks/close.css"],names:[],mappings:"AAAA,oCACE,aAEE,WAAY,CADZ,SAEF,CACF",sourcesContent:["@media screen and (max-width: 488px) {\n  #close-image {\n    top: -28px;\n    right: -42px;\n  }\n}\n"],sourceRoot:""}]),e.Z=a},659:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,".content{margin:0 auto}","",{version:3,sources:["webpack://./src/blocks/content.css"],names:[],mappings:"AAAA,SACE,aACF",sourcesContent:[".content {\n  margin: 0 auto 0 auto;\n}\n"],sourceRoot:""}]),e.Z=a},356:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,".footer{margin:0 auto;max-width:880px;padding:67px 0 60px}.footer__copyright{color:#545454;font-family:Inter,Arial,sans-serif;font-size:18px;font-style:normal;font-weight:400;margin:0}@media screen and (max-width:918px){.footer{max-width:95.7%}}@media screen and (max-width:320px){.footer{margin:0;padding:48px 0 36px 19px}.footer__copyright{font-size:14px;line-height:17px}}","",{version:3,sources:["webpack://./src/blocks/footer.css"],names:[],mappings:"AAAA,QAEE,aAAqB,CACrB,eAAgB,CAFhB,mBAGF,CAEA,mBAGE,aAAc,CAFd,kCAAuC,CAIvC,cAAe,CADf,iBAAkB,CAFlB,eAAgB,CAIhB,QACF,CAEA,oCACE,QACE,eACF,CACF,CAEA,oCACE,QACE,QAAS,CACT,wBACF,CACA,mBACE,cAAe,CACf,gBACF,CACF",sourcesContent:['.footer {\n  padding: 67px 0 60px 0;\n  margin: 0 auto 0 auto;\n  max-width: 880px;\n}\n\n.footer__copyright {\n  font-family: "Inter", Arial, sans-serif;\n  font-weight: 400;\n  color: #545454;\n  font-style: normal;\n  font-size: 18px;\n  margin: 0;\n}\n\n@media screen and (max-width: 918px) {\n  .footer {\n    max-width: calc(100% - 4.3%);\n  }\n}\n\n@media screen and (max-width: 320px) {\n  .footer {\n    margin: 0;\n    padding: 48px 0 36px 19px;\n  }\n  .footer__copyright {\n    font-size: 14px;\n    line-height: 17px;\n  }\n}\n'],sourceRoot:""}]),e.Z=a},133:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,".form{border:none;margin:0;padding:0}.form__input{border:none;border-bottom:1px solid rgba(0,0,0,.2);color:#000;font-size:14px;line-height:17px;margin:29px 36px 0;overflow:hidden;padding:0 0 11px;width:83%}.form__input:last-child{margin-bottom:0}.form__button{background:#000;border-radius:2px;border-style:none;color:#fff;cursor:pointer;font-family:Inter,Arial,sans-serif;font-size:18px;font-weight:400;height:50px;margin:43px 36px 36px;padding:0;text-align:center;width:83%}.form__button:hover{opacity:.8}@media screen and (max-width:488px){.form__input{margin:0 7.8% 9.3%}.form__button{font-size:14px;height:46px;margin:14% 7.8% 7.8%}}.form__error{color:red;font-size:12px;left:0;line-height:15px;margin:0;padding:0 36px;position:inherit;top:calc(100% - 5px);transition:opacity .3s}.form__input_type_error{border-bottom:1px solid red}.form__button_disabled{cursor:default;opacity:.2}.form__button_disabled:hover{opacity:.2}","",{version:3,sources:["webpack://./src/blocks/form.css"],names:[],mappings:"AAAA,MACE,WAAY,CAEZ,QAAS,CADT,SAEF,CAEA,aAEE,WAA2C,CAA3C,sCAA2C,CAE3C,UAAc,CACd,cAAe,CACf,gBAAiB,CACjB,kBAAwB,CACxB,eAAgB,CAChB,gBAAmB,CANnB,SAOF,CAEA,wBACE,eACF,CAEA,cACE,eAAmB,CACnB,iBAAkB,CASlB,iBAAkB,CALlB,UAAc,CAOd,cAAe,CARf,kCAAuC,CAGvC,cAAe,CADf,eAAgB,CAHhB,WAAY,CAUZ,qBAAmB,CAFnB,SAAU,CAHV,iBAAkB,CANlB,SAYF,CAEA,oBACE,UACF,CAEA,oCACE,aACE,kBACF,CACA,cAGE,cAAe,CADf,WAAY,CADZ,oBAGF,CACF,CAEA,aAGE,SAAc,CAFd,cAAe,CAKf,MAAO,CAJP,gBAAiB,CAMjB,QAAS,CACT,cAAsB,CALtB,gBAAiB,CACjB,oBAAqB,CAErB,sBAGF,CAEA,wBACE,2BACF,CAEA,uBAEE,cAAe,CADf,UAEF,CAEA,6BACE,UACF",sourcesContent:['.form {\n  border: none;\n  padding: 0;\n  margin: 0;\n}\n\n.form__input {\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  width: 83%;\n  color: #000000;\n  font-size: 14px;\n  line-height: 17px;\n  margin: 29px 36px 0 36px;\n  overflow: hidden;\n  padding: 0 0 11px 0;\n}\n\n.form__input:last-child {\n  margin-bottom: 0;\n}\n\n.form__button {\n  background: #000000;\n  border-radius: 2px;\n  width: 83%;\n  height: 50px;\n  font-family: "Inter", Arial, sans-serif;\n  color: #ffffff;\n  font-weight: 400;\n  font-size: 18px;\n  text-align: center;\n  margin: 43px 36px 0 36px;\n  border-style: none;\n  padding: 0;\n  cursor: pointer;\n  margin-bottom: 36px;\n}\n\n.form__button:hover {\n  opacity: 0.8;\n}\n\n@media screen and (max-width: 488px) {\n  .form__input {\n    margin: 0 7.8% 9.3% 7.8%;\n  }\n  .form__button {\n    margin: 14% 7.8% 7.8% 7.8%;\n    height: 46px;\n    font-size: 14px;\n  }\n}\n\n.form__error {\n  font-size: 12px;\n  line-height: 15px;\n  color: #ff0000;\n  position: inherit;\n  top: calc(100% - 5px);\n  left: 0;\n  transition: opacity 0.3s;\n  margin: 0;\n  padding: 0 36px 0 36px;\n}\n\n.form__input_type_error {\n  border-bottom: 1px solid #ff0000;\n}\n\n.form__button_disabled {\n  opacity: 0.2;\n  cursor: default;\n}\n\n.form__button_disabled:hover {\n  opacity: 0.2;\n}\n'],sourceRoot:""}]),e.Z=a},387:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,".header{border-bottom:1px solid rgba(84,84,84,.7);display:flex;flex-direction:column;justify-content:flex-start;margin:0 auto;padding:45px 0 41px;width:880px}.header__logo{height:33px;width:173px}@media screen and (max-width:918px){.header{max-width:95.7%}}@media screen and (max-width:488px){.header{max-width:100%;padding-bottom:32px;padding-top:28px}.header__logo{margin:0 0 0 27px}}@media screen and (max-width:320px){.header__logo{height:24px;margin:0 auto 0 27px;width:126px}}","",{version:3,sources:["webpack://./src/blocks/header.css"],names:[],mappings:"AAAA,QAOE,yCAA8C,CAN9C,YAAa,CACb,qBAAsB,CACtB,0BAA2B,CAE3B,aAAqB,CADrB,mBAAsB,CAEtB,WAEF,CAEA,cAEE,WAAY,CADZ,WAGF,CAEA,oCACE,QACE,eACF,CACF,CAEA,oCACE,QACE,cAAe,CAEf,mBAAoB,CADpB,gBAEF,CACA,cACE,iBACF,CACF,CAEA,oCACE,cAEE,WAAY,CACZ,oBAAqB,CAFrB,WAGF,CACF",sourcesContent:[".header {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 45px 0 41px 0;\n  margin: 0 auto 0 auto;\n  width: 880px;\n  border-bottom: 1px solid rgba(84, 84, 84, 0.7);\n}\n\n.header__logo {\n  width: 173px;\n  height: 33px;\n  /* background: transparent url(../images/around-the-us-logo.svg) center no-repeat; */\n}\n\n@media screen and (max-width: 918px) {\n  .header {\n    max-width: calc(100% - 4.3%);\n  }\n}\n\n@media screen and (max-width: 488px) {\n  .header {\n    max-width: 100%;\n    padding-top: 28px;\n    padding-bottom: 32px;\n  }\n  .header__logo {\n    margin: 0 0 0 27px;\n  }\n}\n\n@media screen and (max-width: 320px) {\n  .header__logo {\n    width: 126px;\n    height: 24px;\n    margin: 0 auto 0 27px;\n  }\n}\n"],sourceRoot:""}]),e.Z=a},694:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r),s=t(667),A=t.n(s),d=new URL(t(823),t.b),p=new URL(t(195),t.b),c=a()(o()),l=A()(d),u=A()(p);c.push([n.id,".modal{background:rgba(0,0,0,.5);bottom:0;display:flex;left:0;opacity:0;position:fixed;right:0;top:0;transition:visibility 0s linear .5s,opacity .5s;visibility:hidden;z-index:1}.modal__container{background:#fff;border-radius:10px;box-shadow:0 0 25px rgba(0,0,0,.15);margin:auto;padding:0;position:relative;width:430px}.modal_opened{display:flex;opacity:1;transition:opacity .5s;visibility:visible}.modal__title{color:#000;font-family:Inter,Arial,sans-serif;font-size:24px;font-weight:900;margin:34px 36px 21px}.modal__form{margin:0;padding:0}.modal__form-field{color:#000}.modal__close-button{background:transparent url("+l+") 50% no-repeat;background-size:40px 40px;border:none;cursor:pointer;display:block;height:40px;padding:0;position:absolute;right:-45px;top:-40px;width:40px}.modal__close-button:hover{opacity:.6}.modal__popup{margin:auto;position:relative}.modal__image{display:block;height:300px;margin:0 auto;max-height:80vh;max-width:90vw;-o-object-fit:contain;object-fit:contain;width:400px}.modal__name{font-family:Inter,Arial,sans-serif;font-size:12px;font-weight:400;margin-top:10px}@media screen and (max-width:488px){.modal__container{width:282px}.modal__image{max-width:240px}.modal__close-button{background:transparent url("+u+") 50% no-repeat;right:-15px;top:-35px}.modal__title{font-size:18px;line-height:22px;margin:8% 7.8% 27%}}","",{version:3,sources:["webpack://./src/blocks/modal.css"],names:[],mappings:"AAAA,OAGE,yBAA8B,CAI9B,QAAS,CALT,YAAa,CAEb,MAAO,CAQP,SAAU,CAXV,cAAe,CAIf,OAAQ,CACR,KAAM,CAON,+CAAmD,CAFnD,iBAAkB,CAHlB,SAMF,CAEA,kBACE,eAAmB,CAEnB,kBAAmB,CACnB,mCAA4C,CAC5C,WAAY,CACZ,SAAU,CACV,iBAAkB,CALlB,WAMF,CAEA,cACE,YAAa,CAIb,SAAU,CACV,sBAAwB,CAFxB,kBAGF,CAEA,cAGE,UAAc,CAFd,kCAAuC,CACvC,cAAe,CAEf,eAAgB,CAChB,qBACF,CAEA,aAEE,QAAS,CADT,SAEF,CAEA,mBACE,UACF,CAEA,qBACE,4EAA8E,CAC9E,yBAA0B,CAC1B,WAAY,CAKZ,cAAe,CAHf,aAAc,CACd,WAAY,CAGZ,SAAU,CALV,iBAAkB,CAOlB,WAAY,CADZ,SAAU,CAHV,UAKF,CAEA,2BACE,UACF,CAEA,cACE,WAAY,CACZ,iBACF,CAEA,cAME,aAAc,CAJd,YAAa,CAKb,aAAc,CAHd,eAAgB,CADhB,cAAe,CAEf,qBAAmB,CAAnB,kBAAmB,CAJnB,WAOF,CAEA,aAEE,kCAAuC,CADvC,cAAe,CAEf,eAAgB,CAChB,eACF,CAEA,oCACE,kBACE,WACF,CAEA,cACE,eACF,CAEA,qBACE,4EACW,CAEX,WAAY,CADZ,SAEF,CAEA,cACE,cAAe,CACf,gBAAiB,CACjB,kBACF,CACF",sourcesContent:['.modal {\n  position: fixed;\n  display: flex;\n  background: rgba(0, 0, 0, 0.5);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 1;\n\n  /* Reference: https://stackoverflow.com/questions/3331353/transitions-on-the-css-display-property */\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s linear 0.5s, opacity 0.5s;\n}\n\n.modal__container {\n  background: #ffffff;\n  width: 430px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.15);\n  margin: auto;\n  padding: 0;\n  position: relative;\n}\n\n.modal_opened {\n  display: flex;\n\n  /* Reference: https://stackoverflow.com/questions/3331353/transitions-on-the-css-display-property */\n  visibility: visible;\n  opacity: 1;\n  transition: opacity 0.5s;\n}\n\n.modal__title {\n  font-family: "Inter", Arial, sans-serif;\n  font-size: 24px;\n  color: #000000;\n  font-weight: 900;\n  margin: 34px 36px 21px 36px;\n}\n\n.modal__form {\n  padding: 0;\n  margin: 0;\n}\n\n.modal__form-field {\n  color: #000000;\n}\n\n.modal__close-button {\n  background: transparent url("../images/close-icon-large.svg") center no-repeat;\n  background-size: 40px 40px;\n  border: none;\n  position: absolute;\n  display: block;\n  height: 40px;\n  width: 40px;\n  cursor: pointer;\n  padding: 0;\n  top: -40px;\n  right: -45px;\n}\n\n.modal__close-button:hover {\n  opacity: 0.6;\n}\n\n.modal__popup {\n  margin: auto;\n  position: relative;\n}\n\n.modal__image {\n  width: 400px;\n  height: 300px;\n  max-width: 90vw;\n  max-height: 80vh;\n  object-fit: contain;\n  display: block;\n  margin: 0 auto;\n}\n\n.modal__name {\n  font-size: 12px;\n  font-family: "Inter", Arial, sans-serif;\n  font-weight: 400;\n  margin-top: 10px;\n}\n\n@media screen and (max-width: 488px) {\n  .modal__container {\n    width: 282px;\n  }\n\n  .modal__image {\n    max-width: 240px;\n  }\n\n  .modal__close-button {\n    background: transparent url("../images/close-icon-small.svg") center\n      no-repeat;\n    top: -35px;\n    right: -15px;\n  }\n\n  .modal__title {\n    font-size: 18px;\n    line-height: 22px;\n    margin: 8% 7.8% 27% 7.8%;\n  }\n}\n'],sourceRoot:""}]),e.Z=c},865:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,".page{background-color:#000;color:#fff;font-family:Inter,Arial,sans-serif;font-size:18px;line-height:22px;margin-left:auto;margin-right:auto;max-width:1280px;min-width:320px;padding:0}","",{version:3,sources:["webpack://./src/blocks/page.css"],names:[],mappings:"AAAA,MAQE,qBAAyB,CACzB,UAAc,CANd,kCAAuC,CACvC,cAAe,CACf,gBAAiB,CACjB,gBAAiB,CACjB,iBAAkB,CALlB,gBAAiB,CADjB,eAAgB,CAShB,SACF",sourcesContent:['.page {\n  min-width: 320px;\n  max-width: 1280px;\n  font-family: "Inter", Arial, sans-serif;\n  font-size: 18px;\n  line-height: 22px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #000000;\n  color: #ffffff;\n  padding: 0;\n}\n'],sourceRoot:""}]),e.Z=a},99:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r),s=t(667),A=t.n(s),d=new URL(t(568),t.b),p=new URL(t(424),t.b),c=a()(o()),l=A()(d),u=A()(p);c.push([n.id,".profile{align-items:center;display:flex;font-family:Inter,Arial,sans-serif;margin:36.25px auto 47.25px;padding:0;width:880px}.profile__avatar-container{border-radius:50%;height:120px;margin:0 29px 0 0;position:relative;width:120px}.profile__image{border-radius:50%;height:100%;-o-object-fit:cover;object-fit:cover;width:100%}.profile__avatar-overlay{background:rgba(0,0,0,.8) url("+l+') 50% no-repeat;background-size:26px 26px;border-radius:50%;cursor:pointer;height:100%;left:0;opacity:0;position:absolute;top:0;transition:opacity .3s;width:100%}.profile__avatar-container:hover .profile__avatar-overlay{opacity:1}.profile__info{grid-gap:8px 17px;display:grid;grid-template-areas:"name button" "tag tag";grid-template-columns:minmax(auto,373px) auto;margin:0}.profile__name{font-size:42px;font-weight:500;grid-area:name;line-height:48px}.profile__name,.profile__profession{margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.profile__profession{font-size:18px;font-weight:400;grid-area:tag;line-height:22px;max-width:373px}.profile__edit-button{align-self:center;background:transparent url('+l+") 50% no-repeat;background-size:18px 18px;border:1px solid #fff;grid-area:button;height:24px;justify-self:center;margin:0;padding:0;width:24px}.profile__edit-button:hover{cursor:pointer;opacity:.6}.profile__add-button{background:transparent url("+u+") 50% no-repeat;background-size:22px 22px;border:2px solid #fff;border-radius:2px;height:50px;margin-left:auto;padding:0;width:150px}.profile__add-button:hover{cursor:pointer;opacity:.6}@media screen and (max-width:918px){.profile{max-width:95.7%}}@media screen and (max-width:735px){.profile__image{margin:0 20px 0 0}.profile__name{font-size:33px;line-height:35px}.profile__tag{font-size:18px;line-height:20px;max-width:215px}.profile__add-button{height:50px;width:50px}.profile__info{grid-template-columns:minmax(auto,224px) auto}}@media screen and (max-width:488px){.profile{display:flex;flex-direction:column;margin:38.25px auto 36px;max-width:88.1%}.profile__image{margin:0}.profile__info{grid-gap:8px 5px;grid-template-columns:minmax(auto,224px) auto;justify-items:center;margin-top:30px}.profile__name{font-size:22px;line-height:27px;max-width:200px}.profile__tag{font-size:14px;line-height:17px;margin:0 auto 36px;max-width:175px}.profile__add-button{width:100%}}@media screen and (max-width:320px){.profile__edit-button{background-size:12px 12px;height:18px;width:18px}.profile__add-button{background-size:16px 16px}}","",{version:3,sources:["webpack://./src/blocks/profile.css"],names:[],mappings:"AAAA,SAGE,kBAAmB,CADnB,YAAa,CADb,kCAAuC,CAGvC,2BAAiC,CACjC,SAAU,CACV,WACF,CAEA,2BAEE,iBAAkB,CAElB,YAAa,CACb,iBAAkB,CAJlB,iBAAkB,CAElB,WAGF,CAEA,gBACE,iBAAkB,CAElB,WAAY,CACZ,mBAAiB,CAAjB,gBAAiB,CAFjB,UAGF,CAEA,yBAME,+EAAgF,CAChF,yBAA0B,CAI1B,iBAAkB,CADlB,cAAe,CALf,WAAY,CAFZ,MAAO,CAKP,SAAU,CAPV,iBAAkB,CAClB,KAAM,CAON,sBAAwB,CALxB,UAQF,CAEA,0DACE,SACF,CAEA,eAME,iBAAkB,CALlB,YAAa,CACb,2CAEW,CACX,6CAA+C,CAE/C,QACF,CAEA,eAEE,cAAe,CADf,eAAgB,CAIhB,cAAe,CAFf,gBAMF,CAEA,oCAPE,QAAS,CAGT,eAAgB,CADhB,sBAAuB,CAEvB,kBAaF,CAVA,qBAEE,cAAe,CADf,eAAgB,CAIhB,aAAc,CAFd,gBAAiB,CAMjB,eACF,CAEA,sBASE,iBAAkB,CAJlB,4EAAyE,CACzE,yBAA0B,CAC1B,qBAAyB,CACzB,gBAAiB,CAJjB,WAAY,CAMZ,mBAAoB,CARpB,QAAS,CADT,SAAU,CAEV,UAQF,CAEA,4BACE,cAAe,CACf,UACF,CAEA,qBAIE,4EAAwE,CAExE,yBAA0B,CAD1B,qBAAyB,CAGzB,iBAAkB,CALlB,WAAY,CAIZ,gBAAiB,CANjB,SAAU,CACV,WAOF,CAEA,2BACE,cAAe,CACf,UACF,CAEA,oCACE,SACE,eACF,CACF,CAEA,oCACE,gBACE,iBACF,CACA,eACE,cAAe,CACf,gBACF,CACA,cACE,cAAe,CACf,gBAAiB,CACjB,eACF,CACA,qBAEE,WAAY,CADZ,UAEF,CACA,eACE,6CACF,CACF,CAEA,oCACE,SACE,YAAa,CACb,qBAAsB,CACtB,wBAA8B,CAC9B,eACF,CACA,gBACE,QACF,CACA,eAGE,gBAAiB,CADjB,6CAA+C,CAE/C,oBAAqB,CAHrB,eAIF,CACA,eACE,cAAe,CACf,gBAAiB,CACjB,eACF,CACA,cAEE,cAAe,CACf,gBAAiB,CAFjB,kBAAwB,CAGxB,eACF,CACA,qBACE,UACF,CACF,CAEA,oCACE,sBACE,yBAA0B,CAC1B,WAAY,CACZ,UACF,CACA,qBACE,yBACF,CACF",sourcesContent:['.profile {\n  font-family: "Inter", Arial, sans-serif;\n  display: flex;\n  align-items: center;\n  margin: 36.25px auto 47.25px auto;\n  padding: 0;\n  width: 880px;\n}\n\n.profile__avatar-container {\n  position: relative;\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  margin: 0 29px 0 0;\n}\n\n.profile__image {\n  border-radius: 50%;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.profile__avatar-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8) url("../images/edit-button.svg") center no-repeat;\n  background-size: 26px 26px;\n  opacity: 0;\n  transition: opacity 0.3s;\n  cursor: pointer;\n  border-radius: 50%;\n}\n\n.profile__avatar-container:hover .profile__avatar-overlay {\n  opacity: 1;\n}\n\n.profile__info {\n  display: grid;\n  grid-template-areas:\n    "name button"\n    "tag tag";\n  grid-template-columns: minmax(auto, 373px) auto;\n  grid-gap: 8px 17px;\n  margin: 0;\n}\n\n.profile__name {\n  font-weight: 500;\n  font-size: 42px;\n  line-height: 48px;\n  margin: 0;\n  grid-area: name;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.profile__profession {\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 22px;\n  margin: 0;\n  grid-area: tag;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 373px;\n}\n\n.profile__edit-button {\n  padding: 0;\n  margin: 0;\n  width: 24px;\n  height: 24px;\n  background: transparent url("../images/edit-button.svg") center no-repeat;\n  background-size: 18px 18px;\n  border: 1px solid #ffffff;\n  grid-area: button;\n  align-self: center;\n  justify-self: center;\n}\n\n.profile__edit-button:hover {\n  cursor: pointer;\n  opacity: 0.6;\n}\n\n.profile__add-button {\n  padding: 0;\n  width: 150px;\n  height: 50px;\n  background: transparent url("../images/add-button.svg") center no-repeat;\n  border: 2px solid #ffffff;\n  background-size: 22px 22px;\n  margin-left: auto;\n  border-radius: 2px;\n}\n\n.profile__add-button:hover {\n  cursor: pointer;\n  opacity: 0.6;\n}\n\n@media screen and (max-width: 918px) {\n  .profile {\n    max-width: calc(100% - 4.3%);\n  }\n}\n\n@media screen and (max-width: 735px) {\n  .profile__image {\n    margin: 0 20px 0 0;\n  }\n  .profile__name {\n    font-size: 33px;\n    line-height: 35px;\n  }\n  .profile__tag {\n    font-size: 18px;\n    line-height: 20px;\n    max-width: 215px;\n  }\n  .profile__add-button {\n    width: 50px;\n    height: 50px;\n  }\n  .profile__info {\n    grid-template-columns: minmax(auto, 224px) auto;\n  }\n}\n\n@media screen and (max-width: 488px) {\n  .profile {\n    display: flex;\n    flex-direction: column;\n    margin: 38.25px auto 36px auto;\n    max-width: calc(100% - 11.9%);\n  }\n  .profile__image {\n    margin: 0;\n  }\n  .profile__info {\n    margin-top: 30px;\n    grid-template-columns: minmax(auto, 224px) auto;\n    grid-gap: 8px 5px;\n    justify-items: center;\n  }\n  .profile__name {\n    font-size: 22px;\n    line-height: 27px;\n    max-width: 200px;\n  }\n  .profile__tag {\n    margin: 0 auto 36px auto;\n    font-size: 14px;\n    line-height: 17px;\n    max-width: 175px;\n  }\n  .profile__add-button {\n    width: 100%;\n  }\n}\n\n@media screen and (max-width: 320px) {\n  .profile__edit-button {\n    background-size: 12px 12px;\n    height: 18px;\n    width: 18px;\n  }\n  .profile__add-button {\n    background-size: 16px 16px;\n  }\n}\n'],sourceRoot:""}]),e.Z=c},986:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r),s=t(110),A=t(511),d=t(865),p=t(659),c=t(387),l=t(99),u=t(437),C=t(259),m=t(356),h=t(799),f=t(694),g=t(133),_=a()(o());_.i(s.Z),_.i(A.Z),_.i(d.Z),_.i(p.Z),_.i(c.Z),_.i(l.Z),_.i(u.Z),_.i(C.Z),_.i(m.Z),_.i(h.Z),_.i(f.Z),_.i(g.Z),_.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),e.Z=_},511:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r),s=t(667),A=t.n(s),d=new URL(t(433),t.b),p=new URL(t(137),t.b),c=new URL(t(554),t.b),l=a()(o()),u=A()(d),C=A()(p),m=A()(c);l.push([n.id,"@font-face{font-family:Inter;font-style:normal;font-weight:400;src:url("+u+")}@font-face{font-family:Inter;font-style:normal;font-weight:500;src:url("+C+")}@font-face{font-family:Inter;font-style:normal;font-weight:900;src:url("+m+")}","",{version:3,sources:["webpack://./src/vendor/fonts/fonts.css"],names:[],mappings:"AAAA,WACE,iBAAoB,CAGpB,iBAAkB,CADlB,eAAgB,CADhB,2CAGF,CAEA,WACE,iBAAoB,CAGpB,iBAAkB,CADlB,eAAgB,CADhB,2CAGF,CAEA,WACE,iBAAoB,CAGpB,iBAAkB,CADlB,eAAgB,CADhB,2CAGF",sourcesContent:['@font-face {\n  font-family: "Inter";\n  src: url(./Inter-Regular.woff);\n  font-weight: 400;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "Inter";\n  src: url(./Inter-Medium.woff);\n  font-weight: 500;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: "Inter";\n  src: url(./Inter-Black.woff);\n  font-weight: 900;\n  font-style: normal;\n}\n'],sourceRoot:""}]),e.Z=l},110:function(n,e,t){var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}","",{version:3,sources:["webpack://./src/vendor/normalize.css"],names:[],mappings:"AAAA,2EAA2E,CAU3E,KAEE,6BAA8B,CAD9B,gBAEF,CASA,KACE,QACF,CAMA,KACE,aACF,CAOA,GACE,aAAc,CACd,cACF,CAUA,GACE,sBAAuB,CACvB,QAAS,CACT,gBACF,CAOA,IACE,+BAAiC,CACjC,aACF,CASA,EACE,4BACF,CAOA,YACE,kBAAmB,CACnB,yBAA0B,CAC1B,wCAAiC,CAAjC,gCACF,CAMA,SAEE,kBACF,CAOA,cAGE,+BAAiC,CACjC,aACF,CAMA,MACE,aACF,CAOA,QAEE,aAAc,CACd,aAAc,CACd,iBAAkB,CAClB,uBACF,CAEA,IACE,aACF,CAEA,IACE,SACF,CASA,IACE,iBACF,CAUA,sCAKE,mBAAoB,CACpB,cAAe,CACf,gBAAiB,CACjB,QACF,CAOA,aAGE,gBACF,CAOA,cAGE,mBACF,CAMA,gDAIE,yBACF,CAMA,wHAIE,iBAAkB,CAClB,SACF,CAMA,4GAIE,6BACF,CAMA,SACE,0BACF,CASA,OACE,qBAAsB,CACtB,aAAc,CACd,aAAc,CACd,cAAe,CACf,SAAU,CACV,kBACF,CAMA,SACE,uBACF,CAMA,SACE,aACF,CAOA,6BAEE,qBAAsB,CACtB,SACF,CAMA,kFAEE,WACF,CAOA,cACE,4BAA6B,CAC7B,mBACF,CAMA,yCACE,uBACF,CAOA,6BACE,yBAA0B,CAC1B,YACF,CASA,QACE,aACF,CAMA,QACE,iBACF,CAiBA,kBACE,YACF",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n     ========================================================================== */\n\n/**\n   * Remove the margin in all browsers.\n   */\n\nbody {\n  margin: 0;\n}\n\n/**\n   * Render the `main` element consistently in IE.\n   */\n\nmain {\n  display: block;\n}\n\n/**\n   * Correct the font size and margin on `h1` elements within `section` and\n   * `article` contexts in Chrome, Firefox, and Safari.\n   */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n     ========================================================================== */\n\n/**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n     ========================================================================== */\n\n/**\n   * Remove the gray background on active links in IE 10.\n   */\n\na {\n  background-color: transparent;\n}\n\n/**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n   * Add the correct font size in all browsers.\n   */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n   * Prevent `sub` and `sup` elements from affecting the line height in\n   * all browsers.\n   */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n     ========================================================================== */\n\n/**\n   * Remove the border on images inside links in IE 10.\n   */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n     ========================================================================== */\n\n/**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   */\n\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n\n/**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n\n/**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n   * Remove the inner border and padding in Firefox.\n   */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n   * Restore the focus styles unset by the previous rule.\n   */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n   * Correct the padding in Firefox.\n   */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    `fieldset` elements in all browsers.\n   */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n   * Remove the default vertical scrollbar in IE 10+.\n   */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to `inherit` in Safari.\n   */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n     ========================================================================== */\n\n/*\n   * Add the correct display in Edge, IE 10+, and Firefox.\n   */\n\ndetails {\n  display: block;\n}\n\n/*\n   * Add the correct display in all browsers.\n   */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n     ========================================================================== */\n\n/**\n   * Add the correct display in IE 10+.\n   */\n\ntemplate {\n  display: none;\n}\n\n/**\n   * Add the correct display in IE 10.\n   */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]),e.Z=a},645:function(n){n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t}).join("")},e.i=function(n,t,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);i&&a[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},667:function(n){n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:function(n){n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */"),a=t.sources.map(function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")});return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:function(n){var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},a=[],s=0;s<n.length;s++){var A=n[s],d=i.base?A[0]+i.base:A[0],p=r[d]||0,c="".concat(d," ").concat(p);r[d]=p+1;var l=t(c),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var C=o(u,i);i.byIndex=s,e.splice(s,0,{identifier:c,updater:C,references:1})}a.push(c)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=i(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=t(r[a]);e[s].references--}for(var A=i(n,o),d=0;d<r.length;d++){var p=t(r[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}r=A}}},569:function(n){var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:function(n){n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:function(n,e,t){n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:function(n){n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:function(n){n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},424:function(n,e,t){n.exports=t.p+"images/add-button.svg"},823:function(n,e,t){n.exports=t.p+"images/close-icon-large.svg"},195:function(n,e,t){n.exports=t.p+"images/close-icon-small.svg"},568:function(n,e,t){n.exports=t.p+"images/edit-button.svg"},112:function(n,e,t){n.exports=t.p+"images/like-button-active.svg"},702:function(n,e,t){n.exports=t.p+"images/like-button-inactive.svg"},723:function(n,e,t){n.exports=t.p+"images/trash-icon.svg"},554:function(n,e,t){n.exports=t.p+"fonts/Inter-Black.woff"},137:function(n,e,t){n.exports=t.p+"fonts/Inter-Medium.woff"},433:function(n,e,t){n.exports=t.p+"fonts/Inter-Regular.woff"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.m=n,t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,{a:e}),e},t.d=function(n,e){for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t.b=document.baseURI||self.location.href,t.nc=void 0,function(){var n=t(379),e=t.n(n),i=t(795),o=t.n(i),r=t(569),a=t.n(r),s=t(565),A=t.n(s),d=t(216),p=t.n(d),c=t(589),l=t.n(c),u=t(986),C={};C.styleTagTransform=l(),C.setAttributes=A(),C.insert=a().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=p(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;class m{constructor({data:n,userId:e,handleImageClick:t,handleDeleteClick:i,handleLikeClick:o},r){this._name=n.name,this._link=n.link,this._id=n._id,this._ownerId=n.owner?n.owner._id:"",this._userId=e,this._isLiked=n.isLiked,this._likeCount=n.likeCount,this._cardSelector=r,this._handleImageClick=t,this._handleDeleteClick=i,this._handleLikeClick=o}_setEventListeners(){this._likeButton=this._element.querySelector(".card__like-button"),this._likeButton.addEventListener("click",()=>this._handleLikeClick(this)),this._element.querySelector(".card__delete-button").addEventListener("click",()=>this._handleDeleteClick(this)),this._element.querySelector(".card__image").addEventListener("click",()=>this._handleImageClick({link:this._link,name:this._name}))}isLiked(){return this._isLiked}updateState(n){this._isLiked=n.isLiked,this._likeCount=n.likeCount,this._renderLikes()}_renderLikes(){const n=this._element.querySelector(".card__like-count");n&&(n.textContent=this._likeCount||0),this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}remove(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){this._element=this._getTemplate();const n=this._element.querySelector(".card__image");return n.src=this._link,n.alt=`Photo of ${this._name}`,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._renderLikes(),this._element}}class h{constructor(n,e){var t,i,o;t=this,o=()=>Array.from(this._inputList).some(this._checkValidity),(i=function(n){var e=function(n){if("object"!=typeof n||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=typeof t)return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==typeof e?e:e+""}(i="_hasInvalidInput"))in t?Object.defineProperty(t,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[i]=o,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._form=e,this._inputList=this._form.querySelectorAll(this._inputSelector),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(n){const e=this._form.querySelector(`#${n.id}-error`);n.classList.add(this._inputErrorClass),e.textContent=n.validationMessage,e.classList.add(this._errorClass)}_hideInputError(n){const e=this._form.querySelector(`#${n.id}-error`);n.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleInputState(n){n.validity.valid?this._hideInputError(n):this._showInputError(n)}_checkValidity(n){return!n.validity.valid}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this.disableButton(),this._inputList.forEach(n=>{n.addEventListener("input",()=>{this._toggleInputState(n),this._toggleButtonState()})})}enableValidation(){this._form.addEventListener("submit",n=>{n.preventDefault()}),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach(n=>{this._hideInputError(n)})}}class f{constructor({items:n,renderer:e},t){this._renderedItems=n,this._renderer=e,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach(n=>{this.addItem(this._renderer(n))})}addItem(n,e=!1){e?this._container.prepend(n):this._container.append(n)}}class g{constructor({popupSelector:n}){this._popupElement=document.querySelector(n),this._closeButton=this._popupElement.querySelector(".modal__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._previouslyFocused=document.activeElement,this._popupElement.classList.add("modal_opened");const n=this._popupElement.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');n&&n.focus(),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),this._previouslyFocused&&(this._previouslyFocused.focus(),this._previouslyFocused=null),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(n){"Escape"===n.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",n=>{n.target===n.currentTarget&&this.close()}),this._closeButton.addEventListener("click",()=>this.close())}}class _ extends g{constructor(n){super({popupSelector:n}),this._imageElement=this._popupElement.querySelector(".modal__image"),this._imageCaption=this._popupElement.querySelector(".modal__name"),super.setEventListeners()}open(n){this._imageElement.src=n.link,this._imageElement.alt=`Image ${n.name}`,this._imageCaption.textContent=n.name,super.open()}}class x extends g{constructor(n,e,{errorSelector:t}={}){super({popupSelector:n}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".form__button"),this._originalButtonText=this._submitButton.textContent,this._formInputs=this._popupForm.querySelectorAll("input"),this._handleFormSubmit=e,this._errorElement=t?this._popupForm.querySelector(t):null}setLoading(n,e="Saving..."){n?(this._submitButton.textContent=e,this._submitButton.disabled=!0):(this._submitButton.textContent=this._originalButtonText,this._submitButton.disabled=!1)}clearError(){this._errorElement&&(this._errorElement.textContent="",this._errorElement.classList.remove("form__error_active"))}_getInputValues(){const n={};return this._formInputs.forEach(e=>{n[e.name]=e.value}),n}setInputValues(n){this._formInputs.forEach(e=>{n[e.name]?e.value=n[e.name]:e.value=""})}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",n=>{n.preventDefault(),this._handleFormSubmit(this._getInputValues())})}}const b=new class{constructor({baseUrl:n,headers:e}){this._baseUrl=n,this._headers=e}_request(n,e){return fetch(n,e).then(this._checkResponse)}_checkResponse(n){return n.ok?n.json():Promise.reject(`Error: ${n.status}`)}getAppData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}setUserInfo({name:n,about:e}){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n,about:e})})}addCard({name:n,link:e}){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:n,link:e})})}deleteCard(n){return this._request(`${this._baseUrl}/cards/${n}`,{method:"DELETE",headers:this._headers})}likeCard(n){return this._request(`${this._baseUrl}/cards/${n}/likes`,{method:"PUT",headers:this._headers})}unlikeCard(n){return this._request(`${this._baseUrl}/cards/${n}/likes`,{method:"DELETE",headers:this._headers})}setUserAvatar({avatar:n}){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:n})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"17110c9b-5c8a-4181-9d61-1ca5d24672ce","Content-Type":"application/json"}}),B=document.querySelector(".profile__edit-button"),E=document.querySelector(".profile__add-button"),v=(document.querySelector("#name"),document.querySelector("#profession"),document.forms["profile-form"]),y=document.forms["card-form"],w={};var k;k={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible",formSelector:".popup__form"},Array.from(document.querySelectorAll(k.formSelector)).forEach(n=>{const e=new h(k,n),t=n.getAttribute("name");w[t]=e,e.enableValidation()});const F=function(){const n=new _("#image-modal");return n.close(),n}();function S(n,e){return new m({data:n,userId:e,handleImageClick:n=>{F.open(n)},handleDeleteClick:n=>{U.open(),U.setSubmitAction(()=>{b.deleteCard(n._id).then(()=>{n.remove(),U.close()}).catch(n=>{console.error("Error deleting card:",n)})})},handleLikeClick:n=>{n.isLiked()?b.unlikeCard(n._id).then(e=>{n.updateState(e)}).catch(n=>{console.error("Error unliking card:",n)}):b.likeCard(n._id).then(e=>{n.updateState(e)}).catch(n=>{console.error("Error liking card:",n)})}},"#card-element").getView()}let I;b.getAppData().then(([n,e])=>{z.setUserInfo(n.name,n.about),z.setUserAvatar(n.avatar),I=new f({items:e,renderer:e=>S(e,n._id)},".cards__list"),I.renderItems();const t=new x("#add-modal",e=>{t.setLoading(!0),b.addCard({name:e.name,link:e.link}).then(e=>{const i=S(e,n._id);I.addItem(i,!0),t.close(),y.reset()}).catch(n=>{console.error("Error adding card:",n)}).finally(()=>{t.setLoading(!1)})},{errorSelector:"#add-card-form-error"});E.addEventListener("click",()=>{w[y.getAttribute("name")].resetValidation(),t.clearError(),t.open()}),t.setEventListeners()}).catch(n=>{console.error("Error loading user or cards:",n)});const z=new class{constructor(n,e,t){this._name=document.querySelector(n),this._profession=document.querySelector(e),this._avatar=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,profession:this._profession.textContent}}setUserInfo(n,e){this._name.textContent=n,this._profession.textContent=e}setUserAvatar(n){this._avatar.src=n}}(".profile__name",".profile__profession",".profile__image"),L=new x("#edit-modal",n=>{L.setLoading(!0),b.setUserInfo({name:n.name,about:n.profession}).then(n=>{z.setUserInfo(n.name,n.about),L.close()}).catch(n=>{console.error("Error updating user info:",n)}).finally(()=>{L.setLoading(!1)})});B.addEventListener("click",()=>{const n=z.getUserInfo();L.setInputValues(n),w[v.getAttribute("name")].disableButton(),L.open()}),L.setEventListeners();const U=new class extends g{constructor(n){super({popupSelector:n}),this._form=this._popupElement.querySelector(".form")}setSubmitAction(n){this._handleSubmit=n}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",n=>{n.preventDefault(),this._handleSubmit()})}}("#delete-confirmation-modal");U.setEventListeners();const q=new x("#edit-avatar-modal",n=>{q.setLoading(!0),b.setUserAvatar({avatar:n.link}).then(n=>{z.setUserAvatar(n.avatar),q.close(),q._popupForm.reset()}).catch(n=>{console.error("Error updating avatar:",n)}).finally(()=>{q.setLoading(!1)})});q.setEventListeners(),document.querySelector(".profile__avatar-container").addEventListener("click",()=>{w["avatar-form"].resetValidation(),q.clearError(),q.open()})}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,