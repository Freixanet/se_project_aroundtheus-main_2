!function(){"use strict";class e{constructor(e,t){let{data:s,handleImageClick:r}=e;var n,o,i;n=this,i=()=>{this._likeButton.classList.toggle("card__like-button_active")},(o=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:t+""}(o="_handleLikeIcon"))in n?Object.defineProperty(n,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[o]=i,this._name=s.name,this._link=s.link,this._cardSelector=t,this._handleImageClick=r}_setEventListeners(){this._likeButton=this._element.querySelector(".card__like-button"),this._likeButton.addEventListener("click",this._handleLikeIcon),this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteCard())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_handleDeleteCard(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=`Photo of ${this._name}`,this._element.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._element}}class t{constructor(e,t){var s,r,n;s=this,n=()=>Array.from(this._inputList).some(this._checkValidity),(r=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:t+""}(r="_hasInvalidInput"))in s?Object.defineProperty(s,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):s[r]=n,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputList=this._form.querySelectorAll(this._inputSelector),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleInputState(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkValidity(e){return!e.validity.valid}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this.disableButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputState(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e,t){let{items:s,renderer:r}=e;this._renderedItems=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}addItem(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this._container.prepend(e):this._container.append(e)}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._previouslyFocused=document.activeElement,this._popupElement.classList.add("modal_opened");const e=this._popupElement.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');e&&e.focus(),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),this._previouslyFocused&&(this._previouslyFocused.focus(),this._previouslyFocused=null),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()})),this._closeButton.addEventListener("click",(()=>this.close()))}}class n extends r{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".modal__image"),this._imageCaption=this._popupElement.querySelector(".modal__name"),super.setEventListeners()}open(e){this._imageElement.src=e.link,this._imageElement.alt=`Image ${e.name}`,this._imageCaption.textContent=e.name,super.open()}}class o extends r{constructor(e,t){let{errorSelector:s}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".form__button"),this._formInputs=this._popupForm.querySelectorAll("input"),this._handleFormSubmit=t,this._errorElement=s?this._popupForm.querySelector(s):null}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._formInputs.forEach((t=>{e[t.name]&&(t.value=e[t.name])}))}showError(e){this._errorElement&&(this._errorElement.textContent=e)}clearError(){this._errorElement&&(this._errorElement.textContent="")}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),this.clearError(),super.close()}}const i=new class{static fetchCardsFromAlternateApi(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"c56e30dc-2883-4270-a59e-b2f7bae969c6"}}).then((e=>e.json()))}constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}setUserInfo(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}setUserAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/web_es_11",headers:{authorization:"63780626-9db3-4460-ad06-9b516df8012c","Content-Type":"application/json"}}),a=document.querySelector(".profile__edit-button"),l=document.querySelector(".profile__add-button"),c=(document.querySelector("#name"),document.querySelector("#profession"),document.forms["profile-form"]),h=document.forms["card-form"],u={};var d;d={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible",formSelector:"form"},Array.from(document.querySelectorAll(d.formSelector)).forEach((e=>{const s=new t(d,e),r=e.getAttribute("name");u[r]=s,s.enableValidation()}));const _=function(){const e=new n("#image-modal");return e.close(),e}();function m(t){return new e({data:t,handleImageClick:e=>{_.open(e)}},"#card-element").getView()}let p;Promise.all([i.getUserInfo(),i.getInitialCards()]).then((e=>{let[t,r]=e;v.setUserInfo(t.name,t.about),v.setUserAvatar(t.avatar),p=new s({items:r,renderer:e=>{const t=m(e);p.addItem(t)}},".cards__list"),p.renderItems()})).catch((e=>{console.log(e)}));const f=new o("#add-modal",(e=>{i.addCard({name:e.name,link:e.link}).then((e=>{const t=m(e);p.addItem(t,!0),f.close()})).catch((e=>{console.log(e)}))}),{errorSelector:"#add-card-form-error"});l.addEventListener("click",(()=>{u[h.getAttribute("name")].resetValidation(),f.clearError(),f.open()})),f.setEventListeners();const v=new class{constructor(e,t,s){this._name=document.querySelector(e),this._profession=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,profession:this._profession.textContent}}setUserInfo(e,t){this._name.textContent=e,this._profession.textContent=t}setUserAvatar(e){this._avatar.src=e}}(".profile__name",".profile__profession",".profile__image"),b=new o("#edit-modal",(e=>{i.setUserInfo({name:e.name,about:e.profession}).then((e=>{v.setUserInfo(e.name,e.about),b.close()})).catch((e=>{console.log(e)}))}));a.addEventListener("click",(()=>{const e=v.getUserInfo();b.setInputValues(e),u[c.getAttribute("name")].disableButton(),b.open()})),b.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,